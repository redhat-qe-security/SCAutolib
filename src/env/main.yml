---
- hosts: vm
  become: true
  remote_user: root
  vars:
    work_dir: /root/sc_testing
    virt: "{{ work_dir }}/virt_card"
    conf: "{{ virt }}/conf"
    lookaside: "http://download.eng.bos.redhat.com/qa/rhts/lookaside/scautolib"

  tasks:
    - name: Create necessary directories
      file:
        path: "{{ item }}"
        state: directory
      loop:
        - "{{ work_dir }}"
        - "{{ virt }}"
    - name: Download redhat.repo
      get_url:
        url: "{{ lookaside }}/redhat.repo"
        dest: /etc/yum.repos.d/

    - name: Install packages
      package:
        name:
          - python3
          - python3-pip
          - softhsm
          - opensc
          - openssl
          - gnutls-utils
          - nss-tools
          - gdm
          - sssd-tools
        state: present

    - name: Install python packages
      pip:
        name:
          - pexpect
          - avocado-framework
          - click
          - avocado-framework-plugin-varianter-yaml-to-mux
          - pyyaml
          - python-dotenv
        extra_args: --upgrade -I

    - name: Download archive from Lookaside
      get_url:
        url: "{{ lookaside }}/scautolib.tar"
        dest: "{{ work_dir }}"

    - name: Open archive with test and library
      unarchive:
        src: "{{ work_dir }}/scautolib.tar"
        dest: "{{ work_dir }}"
        remote_src: yes

    - name: Downoad arhive with configs
      get_url:
        url: "{{ lookaside }}/configs.tar"
        dest: "{{ work_dir }}"

    - name: Open archive with configs
      unarchive:
        src: "{{ work_dir }}/configs.tar"
        dest: "{{ work_dir }}"
        remote_src: yes

    - name: Run setup of local CA
      command:
        cmd: python3 SCAutolib/src/env.py setup-ca --work-dir "{{ virt }}" --conf {{ work_dir }}/configurations.yml
        chdir: "{{ work_dir }}"

    - name: Run setup of virtual smart card
      command:
        cmd: python3 SCAutolib/src/env.py setup-virt-card --conf-dir "{{ work_dir }}/conf" --work-dir "{{ virt }}"
        chdir: "{{ work_dir }}"

    - name: Run tests :)
      command:
        cmd: avocado --show base,app run test_certs.py test_login.py test_sssd_conf.py --mux-yaml configurations.yml --json test_result.json
        chdir: "{{ work_dir }}"
      register: tests

    - debug: msg="{{ tests.stdout }}"
    - debug: msg="{{ tests.stderr }}"


# TODO: create NFS server for development
